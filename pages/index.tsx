import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import styles from "../styles/pages/Home.module.css";
import { useState } from "react";
import { Character, GetCharactersData } from "../types/types";
import FilterAndSearch from "../components/Home/FilterAndSearch";

const Home: NextPage<{ characters: Character[] }> = ({ characters }) => {
  const [display, setDisplay] = useState<Character[]>(characters);

  const families: string[] = [];
  const fullNames: string[] = [];

  characters.forEach(({ family }) => families.push(family));
  characters.forEach(({ fullName }) => fullNames.push(fullName));

  const replaceTxtHouses: string[] = families.map(family =>
    family.replace("House", "").trim()
  );

  const uniqueFamilies: string[] = Array.from(new Set(replaceTxtHouses)).sort();

  const onFilter = (e: React.FormEvent<HTMLSelectElement>): void => {
    e.preventDefault();
    const target: string = (e.target as HTMLSelectElement).value;
    if (target !== null) {
      const filter: Character[] = characters.filter(({ family }) =>
        family.includes(target)
      );
      filter.length && setDisplay(filter);
    }
  };

  const onCleanFilter = (): void => {
    setDisplay(characters);
  };

  const onSearch = (e: React.MouseEvent<HTMLLIElement>): void => {
    e.preventDefault();
    const target: string | null = (e.target as HTMLLIElement).textContent;
    if (target !== null) {
      const filters: Character[] = characters.filter(({ fullName }) =>
        fullName.toLowerCase().startsWith(target.toLowerCase())
      );
      filters.length > 0 && setDisplay(filters);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Game of Thrones</title>
        <meta
          name="characters from Game of Throne Tv show"
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <FilterAndSearch
        uniqueFamilies={uniqueFamilies}
        uniqueFullNames={fullNames}
        onFilter={onFilter}
        onCleanFilter={onCleanFilter}
        onSearch={onSearch}
      />

      <section className={styles.grid}>
        {display?.map(character => (
          <article key={character.id} className={styles.grid__card}>
            <Link href={`/characters/${character.id}`}>
              <Image
                alt={character.fullName}
                src={character.imageUrl}
                width={100}
                height={100}
                className={styles.image}
              />
              <h3>{character.fullName}</h3>
              <p>{character.family.replace("House", "").trim()}</p>
            </Link>
          </article>
        ))}
      </section>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  const res = await fetch(`http://localhost:3000/api/characters`);
  const data: GetCharactersData = await res.json();
  return {
    props: {
      characters: data,
    },
  };
};

// export const getStaticProps = async () => {
//   const res = await fetch(`https://thronesapi.com/api/v2/Characters`);
//   const data: GetCharactersData = await res.json();
//   return {
//     props: {
//       characters: data,
//     },
//   };
// };

export default Home;
